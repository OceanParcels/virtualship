[build-system]
requires = ["setuptools >= 61.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "virtualship"
description = "Code for the Virtual Ship Classroom, where Marine Scientists can combine Copernicus Marine Data with an OceanParcels ship to go on a virtual expedition."
readme = "README.md"
dynamic = ["version"]
authors = [{ name = "oceanparcels.org team" }]
requires-python = ">=3.10"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: Education",
    "Intended Audience :: Education",
]
dependencies = [
    "click",
    "parcels >3.1.0",
    "pyproj >= 3, < 4",
    "sortedcontainers == 2.4.0",
    "opensimplex == 0.4.5",
    "numpy >=1, < 2",
    "pydantic >=2, <3",
    "PyYAML",
    "copernicusmarine >= 2",
]

[project.urls]
Homepage = "https://oceanparcels.org/" # TODO: Update this to just be repo?
Repository = "https://github.com/OceanParcels/virtualship"
Documentation = "https://virtualship.oceanparcels.org/"
"Bug Tracker" = "https://github.com/OceanParcels/virtualship/issues"
Changelog = "https://github.com/OceanParcels/virtualship/releases"


[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
virtualship = ["*.yaml"]

[tool.setuptools_scm]
version_file = "src/virtualship/_version_setup.py"
local_scheme = "no-local-version"

[project.scripts]
virtualship = "virtualship.cli.main:cli"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
  "default::DeprecationWarning",
  "error::DeprecationWarning:virtualship",
  "ignore:ParticleSet is empty.*:RuntimeWarning" # TODO: Probably should be ignored in the source code
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.coverage]
run.source = ["virtualship"]
report.exclude_also = [
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.ruff.lint]
exclude = ["*.ipynb"]

select = [
    "E",  # Error
    "F",  # pyflakes
    "I",  # isort
    "D", # pydocstyle
    "DOC", # pydoclint
    "B",  # Bugbear
    "UP", # pyupgrade
    "ICN", # import conventions
    "RUF", # ruff
    "ISC001", # single-line-implicit-string-concatenation
]
ignore = [
    # line too long (82 > 79 characters)
    "E501",
    # consider `[meta, header, *data]` instead of concatenation
    "RUF005",
    # Use `X | Y` in `isinstance` call instead of `(X, Y)`
    "UP038",
    # multi-line-summary-first-line
    "D212",
    # one-blank-line-before-class
    "D203",
    # First line of docstring should be in imperative mood
    "D401",

    # TODO: Remove later
    "D100", "D103"
]
